#ifndef _KINETICSOURCES1DF_F_H_
#define _KINETICSOURCES1DF_F_H_

#include "FORT_PROTO.H"
#include "CH_Timer.H"
#include "REAL.H"

extern "C"
{

#ifndef GUARDPREPAREDATAFORKINETICSC1D 
#define GUARDPREPAREDATAFORKINETICSC1D 
// Prototype for Fortran procedure PREPAREDATAFORKINETICSC1D ...
//
void FORTRAN_NAME( PREPAREDATAFORKINETICSC1D ,preparedataforkineticsc1d )(
      CHFp_CONST_FRA(U)
      ,CHFp_FRA(Ph)
      ,CHFp_BOX(box) );

#define FORT_PREPAREDATAFORKINETICSC1D FORTRAN_NAME( inlinePREPAREDATAFORKINETICSC1D, inlinePREPAREDATAFORKINETICSC1D)
#define FORTNT_PREPAREDATAFORKINETICSC1D FORTRAN_NAME( PREPAREDATAFORKINETICSC1D, preparedataforkineticsc1d)

inline void FORTRAN_NAME(inlinePREPAREDATAFORKINETICSC1D, inlinePREPAREDATAFORKINETICSC1D)(
      CHFp_CONST_FRA(U)
      ,CHFp_FRA(Ph)
      ,CHFp_BOX(box) )
{
 CH_TIMELEAF("FORT_PREPAREDATAFORKINETICSC1D");
 FORTRAN_NAME( PREPAREDATAFORKINETICSC1D ,preparedataforkineticsc1d )(
      CHFt_CONST_FRA(U)
      ,CHFt_FRA(Ph)
      ,CHFt_BOX(box) );
}
#endif  // GUARDPREPAREDATAFORKINETICSC1D 

#ifndef GUARDMODIFYSOURCEAFTERKINETICSC1D 
#define GUARDMODIFYSOURCEAFTERKINETICSC1D 
// Prototype for Fortran procedure MODIFYSOURCEAFTERKINETICSC1D ...
//
void FORTRAN_NAME( MODIFYSOURCEAFTERKINETICSC1D ,modifysourceafterkineticsc1d )(
      CHFp_FRA(S)
      ,CHFp_BOX(box) );

#define FORT_MODIFYSOURCEAFTERKINETICSC1D FORTRAN_NAME( inlineMODIFYSOURCEAFTERKINETICSC1D, inlineMODIFYSOURCEAFTERKINETICSC1D)
#define FORTNT_MODIFYSOURCEAFTERKINETICSC1D FORTRAN_NAME( MODIFYSOURCEAFTERKINETICSC1D, modifysourceafterkineticsc1d)

inline void FORTRAN_NAME(inlineMODIFYSOURCEAFTERKINETICSC1D, inlineMODIFYSOURCEAFTERKINETICSC1D)(
      CHFp_FRA(S)
      ,CHFp_BOX(box) )
{
 CH_TIMELEAF("FORT_MODIFYSOURCEAFTERKINETICSC1D");
 FORTRAN_NAME( MODIFYSOURCEAFTERKINETICSC1D ,modifysourceafterkineticsc1d )(
      CHFt_FRA(S)
      ,CHFt_BOX(box) );
}
#endif  // GUARDMODIFYSOURCEAFTERKINETICSC1D 

#ifndef GUARDADDKINETICSOURCE1D 
#define GUARDADDKINETICSOURCE1D 
// Prototype for Fortran procedure ADDKINETICSOURCE1D ...
//
void FORTRAN_NAME( ADDKINETICSOURCE1D ,addkineticsource1d )(
      CHFp_FRA(U)
      ,CHFp_CONST_FRA(S)
      ,CHFp_CONST_REAL(dt)
      ,CHFp_BOX(box) );

#define FORT_ADDKINETICSOURCE1D FORTRAN_NAME( inlineADDKINETICSOURCE1D, inlineADDKINETICSOURCE1D)
#define FORTNT_ADDKINETICSOURCE1D FORTRAN_NAME( ADDKINETICSOURCE1D, addkineticsource1d)

inline void FORTRAN_NAME(inlineADDKINETICSOURCE1D, inlineADDKINETICSOURCE1D)(
      CHFp_FRA(U)
      ,CHFp_CONST_FRA(S)
      ,CHFp_CONST_REAL(dt)
      ,CHFp_BOX(box) )
{
 CH_TIMELEAF("FORT_ADDKINETICSOURCE1D");
 FORTRAN_NAME( ADDKINETICSOURCE1D ,addkineticsource1d )(
      CHFt_FRA(U)
      ,CHFt_CONST_FRA(S)
      ,CHFt_CONST_REAL(dt)
      ,CHFt_BOX(box) );
}
#endif  // GUARDADDKINETICSOURCE1D 

}

#endif
